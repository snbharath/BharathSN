package com.msk.epg;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Delayed;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONObject;


import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;

@SuppressLint("NewApi")
public class FavoritesActivity extends Activity implements OnClickListener,OnItemClickListener
{
	private static final int DLG_SHOW_OPTIONS = 1;
	static private Button show_saved;
	private EditText search_EditText;
	private ListView l1 ;
	static private ArrayList <String> list = null;
	private Cursor c;
	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.favorite);
		ArrayList<String> channelList = new ArrayList<String>();
		final ListView l=(ListView)findViewById(R.id.listView1);
		String[] channels = null;
		
		l1 = (ListView)findViewById(R.id.fav_list);
		list = new ArrayList<String>();
		show_saved = (Button)findViewById(R.id.show_saved);
		show_saved.setOnClickListener(this);
		l1.setOnItemClickListener(this);
    }
	
	public void refresh()
	{
		Log.e(CONNECTIVITY_SERVICE, "inside favorites activity refresz");
		list.clear();
		Utility.DBWrapper wrapper = new Utility.DBWrapper(this);
		c = wrapper.getFavorite();
		if(c.getCount()!=0)
		{
			//int t=c.getColumnIndex(DBHelper.CHANNEL_NAME);
			//String te=c.getString(t);
			//Log.e(CONNECTIVITY_SERVICE, te);
			int showidClm;
			c.moveToFirst();
			int t=c.getColumnIndex(DBHelper.CHANNEL_NAME);
			String te=c.getString(t);
			Log.e(CONNECTIVITY_SERVICE, te);
			do 
			{
				showidClm = c.getColumnIndex(DBHelper.PROG_ID);
				
				showidClm = c.getColumnIndex(DBHelper.PROG_NAME);
				String temp= "Name: "+c.getString(showidClm)+"\n";
				
				showidClm = c.getColumnIndex(DBHelper.CHANNEL_NAME);
				temp+="Channel name: "+c.getString(showidClm)+"\n";
				
				showidClm = c.getColumnIndex(DBHelper.PROG_DATE);
				temp+="Date: "+c.getString(showidClm)+"\n";
				
				//Log.d(CONNECTIVITY_SERVICE,c.getString(showidClm));
				showidClm = c.getColumnIndex(DBHelper.PROG_DETAILS);
				temp+="Details:"+c.getString(showidClm)+"\n";
				
				showidClm = c.getColumnIndex(DBHelper.PROG_STIME);
				temp+="Start time: "+c.getString(showidClm)+"\n";
				
				showidClm = c.getColumnIndex(DBHelper.PROG_ETIME);
				temp+="End Time: "+c.getString(showidClm)+"\n";
				
				list.add(temp);
			} while (c.moveToNext());
		}
		else
		{
			AlertDialog.Builder builder = new AlertDialog.Builder(this);
			builder.setTitle("no favorites found");
			builder.show();
		}
		ArrayAdapter <String> adapter = new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,list);
		l1.setAdapter(adapter);
	}
	public void onClick(View v) 
	{
		// TODO Auto-generated method stub
		this.refresh();
	}

	@Override
	public void onItemClick(AdapterView<?> parent, View view,final int position, long id) 
	{
		// TODO Auto-generated method stub
		Dialog dlg = deleteRecord(this, position);
		dlg.show();
		Log.e(CONNECTIVITY_SERVICE, "inside favorites activity 1");
		Log.e(CONNECTIVITY_SERVICE, "inside favorites activity 2");
		try
		{
			Thread.sleep(10000);
		}
		catch(Exception e)
		{
			Log.e("Exception:", e.toString());
		}
		this.refresh();
	}
	
	public static Dialog deleteRecord(final Context context, final int position)
	{
		AlertDialog.Builder builder = new AlertDialog.Builder(context);
		builder.setTitle("Select Option");
		String[] options = { "Delete Favorite", "Cancel" };
		builder.setSingleChoiceItems(options, -1, new DialogInterface.OnClickListener() 
		{
			@Override
			public void onClick(DialogInterface dialog, int which) 
			{
				// TODO Auto-generated method stub
				switch (which) 
				{
					case 0: Utility.DBWrapper wrapper = new Utility.DBWrapper(context);
							Cursor c = wrapper.getIds();
							c.moveToFirst();
							for(int i=0;i<position;i++)
							{
								c.moveToNext();
							}
							int temp= c.getColumnIndex(DBHelper.PROG_ID);
							String selectedID=c.getString(temp);
							temp= wrapper.deleteFavorite(selectedID);
							if(temp!=-1)
							{
								Toast.makeText(context,"Favorite deleted!!",Toast.LENGTH_LONG).show();
							}
							Log.e("NUMBER OF ROWS DELETED", Integer.toString(temp));
							dialog.cancel();
							break;
					case 1: dialog.cancel();
							break;
				}
			}
		});
		Log.e(CONNECTIVITY_SERVICE, "inside favorites activity 3");
		return builder.create();
	}
}