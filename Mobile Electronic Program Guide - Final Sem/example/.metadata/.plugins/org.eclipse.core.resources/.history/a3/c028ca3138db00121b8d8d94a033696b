package com.msk.epg;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Calendar;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ListActivity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;

public class WhatsPlayingNow extends Activity 
{
	JSONArray jArray;
	int progs_id[];
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.nowplaying);
		Calendar ci = Calendar.getInstance();
		ArrayList<String> programList = new ArrayList<String>();
		String time=ci.get(Calendar.HOUR_OF_DAY) + ":" + ci.get(Calendar.MINUTE)+ ":00";
		String Date=ci.get(Calendar.YEAR) + "-" + (ci.get(Calendar.MONTH) + 1) + "-" +ci.get(Calendar.DAY_OF_MONTH);
		
		final ListView pl=(ListView)findViewById(R.id.listView12);
		String[] progs = null;
	
	
	String result="";
    InputStream isr=null;
    try{
    	HttpClient httpclient=new DefaultHttpClient();
    	HttpPost httppost=new HttpPost("http://10.0.2.2/NowPlaying.php?progdate="+Date+"&progtime="+time);
    	HttpResponse response = httpclient.execute(httppost);
    	HttpEntity entity = response.getEntity();
    	isr=entity.getContent();
    }
    catch(Exception e){
//      	channels[0]= "coudnt connect";
    }
    
	  try{
	    	BufferedReader reader=new BufferedReader(new InputStreamReader(isr));
	    	StringBuilder sb= new StringBuilder();
	    	String line=null;
	    	while((line=reader.readLine())!=null)
	    	{
	    		sb.append(line+"\n");
	    	}
	    	isr.close();
	    	result=sb.toString();
	    }
	    catch(Exception e)
	    {
//	    	channels[0]="error in reading";
	    }
	   
	    try{
	    	String s="";
	    	int j=0;
	    	jArray=new JSONArray(result);
	    	progs=new String[jArray.length()+1];
	    	progs_id=new int [jArray.length()+1];
	    	for(int ii=0;ii<jArray.length();ii++)
	    	{
	    		JSONObject json= jArray.getJSONObject(ii);
	    		//progs_id[ii]=Integer.parseInt(json.getString("pid"));
	    		s="Name:"+json.getString("pname")+"\nDetails:"+json.getString("pdetails")+"\nDate:"+json.getString("pdate")+"\nStart Time:"+json.getString("pstime")+"\nEnd Time:"+json.getString("petime")+"\n";
	    		programList.add(s);
	    		j++;
	    	}
	//	programList.add(pDate);
		//programList.add(time);
	    
	    	ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1, programList);
	    	
	    pl.setAdapter(adapter);
	    
	    /*pl.setOnItemClickListener(new OnItemClickListener()
		{
			@Override
			public void onItemClick(AdapterView<?> parent, View view,int position, long id) 
			{
				try
				{
					// getting values from selected ListItem
					JSONObject json = jArray.getJSONObject(position);
					int prog_selec=progs_id[position];
					Intent myIntent1 = new Intent(WhatsPlayingNow.this,FavoriteAdd.class);
					myIntent1.putExtra("selected_prog", prog_selec);
					myIntent1.putExtra("pname", json.getString("pname"));
					myIntent1.putExtra("cname", json.getString("cname"));
					myIntent1.putExtra("pdate", json.getString("pdate"));
					myIntent1.putExtra("pdetails", json.getString("pdetails"));
					myIntent1.putExtra("pstime", json.getString("pstime"));
					myIntent1.putExtra("petime", json.getString("petime"));
					myIntent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
					Log.e(CONNECTIVITY_SERVICE, "inside programList class");
					startActivity(myIntent1);
				}
				catch(Exception e)
				{
					Log.e(CONNECTIVITY_SERVICE, e.toString());
				}
			}
		});*/
	    }
	    catch(Exception e)
	    {
	    //	channels[0]="error parsing";
	    }
}}